// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RpsApi.DataStorage.Model;

#nullable disable

namespace RpsApi.DataStorage.Migrations
{
    [DbContext(typeof(RPSContext))]
    [Migration("20220126225908_RenamePlayerUsername")]
    partial class RenamePlayerUsername
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RpsApi.DataStorage.Model.Move", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Moves");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Rock"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Paper"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Scissors"
                        });
                });

            modelBuilder.Entity("RpsApi.DataStorage.Model.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Players");
                });

            modelBuilder.Entity("RpsApi.DataStorage.Model.Round", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Player1Id")
                        .HasColumnType("int");

                    b.Property<int>("Player1MoveId")
                        .HasColumnType("int");

                    b.Property<int?>("Player2Id")
                        .HasColumnType("int");

                    b.Property<int>("Player2MoveId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.HasKey("Id");

                    b.HasIndex("Player1Id");

                    b.HasIndex("Player1MoveId");

                    b.HasIndex("Player2Id");

                    b.HasIndex("Player2MoveId");

                    b.ToTable("Rounds");
                });

            modelBuilder.Entity("RpsApi.DataStorage.Model.Round", b =>
                {
                    b.HasOne("RpsApi.DataStorage.Model.Player", "Player1")
                        .WithMany("RoundsAsPlayer1")
                        .HasForeignKey("Player1Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("RpsApi.DataStorage.Model.Move", "Player1Move")
                        .WithMany("RoundsUsedByPlayer1")
                        .HasForeignKey("Player1MoveId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RpsApi.DataStorage.Model.Player", "Player2")
                        .WithMany("RoundsAsPlayer2")
                        .HasForeignKey("Player2Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("RpsApi.DataStorage.Model.Move", "Player2Move")
                        .WithMany("RoundsUsedByPlayer2")
                        .HasForeignKey("Player2MoveId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Player1");

                    b.Navigation("Player1Move");

                    b.Navigation("Player2");

                    b.Navigation("Player2Move");
                });

            modelBuilder.Entity("RpsApi.DataStorage.Model.Move", b =>
                {
                    b.Navigation("RoundsUsedByPlayer1");

                    b.Navigation("RoundsUsedByPlayer2");
                });

            modelBuilder.Entity("RpsApi.DataStorage.Model.Player", b =>
                {
                    b.Navigation("RoundsAsPlayer1");

                    b.Navigation("RoundsAsPlayer2");
                });
#pragma warning restore 612, 618
        }
    }
}
